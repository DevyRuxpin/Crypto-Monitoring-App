name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: crypto_monitor_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.19'

    - name: Install dependencies
      run: |
        cd backend
        go mod download

    - name: Run tests
      run: |
        cd backend
        go test -v ./...
      env:
        TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/crypto_monitor_test

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Run frontend tests
      run: |
        cd frontend
        npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
      env:
        DOCKER_USERNAME: ${{ github.actor }}
        DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to production
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      run: |
        doctl kubernetes cluster kubeconfig save prod-cluster
        kubectl set image deployment/crypto-monitor crypto-monitor=ghcr.io/${{ github.repository }}:${{ github.sha }}
